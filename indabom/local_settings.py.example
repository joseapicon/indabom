import os
import raven

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'supersecretkey'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

BOM_CONFIG = {
    'octopart_api_key': 'supersecretkey'   
}

# google GoogleOAuth
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'secretkey'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'secretsecret'

# Sentry.io / raven config
try:
    release = raven.fetch_git_sha(os.path.dirname(os.path.join(os.pardir, os.pardir)))
except raven.exceptions.InvalidGitRepository:
    release = 'TEST'
except:
    release = 'UNKNOWN'

RAVEN_CONFIG = {}
if not DEBUG:
    RAVEN_CONFIG = {
        'dsn': 'yourdsn',
        # If you are using git, you can also automatically configure the
        # release based on the git info.
        'release': release,
    }

EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"
SENDGRID_API_KEY = 'secretkey'

RECAPTCHA_PRIVATE_KEY = 'secret'
RECAPTCHA_PUBLIC_KEY = 'secret'